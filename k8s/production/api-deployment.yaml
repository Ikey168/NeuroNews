apiVersion: v1
kind: Namespace
metadata:
  name: neuronews-prod
  labels:
    environment: production
    app: neuronews
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: neuronews-api-config
  namespace: neuronews-prod
data:
  DATABASE_URL: "postgresql://neuronews:${POSTGRES_PASSWORD}@postgres-service:5432/neuronews_production"
  REDIS_URL: "redis://redis-service:6379/0"
  ENVIRONMENT: "production"
  LOG_LEVEL: "INFO"
  API_VERSION: "v1"
  CORS_ORIGINS: "https://neuronews.example.com"
  MAX_ARTICLES_PER_REQUEST: "50"
  RATE_LIMIT_PER_MINUTE: "60"
  ENABLE_METRICS: "true"
  ENABLE_TRACING: "true"
---
apiVersion: v1
kind: Secret
metadata:
  name: neuronews-api-secrets
  namespace: neuronews-prod
type: Opaque
data:
  JWT_SECRET: ""  # Add production JWT secret (base64 encoded)
  API_KEY: ""     # Add production API key (base64 encoded)
  OPENAI_API_KEY: ""  # Add your OpenAI API key (base64 encoded)
  NEWS_API_KEY: ""    # Add your News API key (base64 encoded)
  POSTGRES_PASSWORD: ""  # Add production database password (base64 encoded)
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: neuronews-api
  namespace: neuronews-prod
  labels:
    app: neuronews-api
    version: v1
    environment: production
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: neuronews-api
  template:
    metadata:
      labels:
        app: neuronews-api
        version: v1
        environment: production
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: api
        image: neuronews/api:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
        - containerPort: 8080
          name: metrics
        env:
        - name: PORT
          value: "8000"
        - name: METRICS_PORT
          value: "8080"
        envFrom:
        - configMapRef:
            name: neuronews-api-config
        - secretRef:
            name: neuronews-api-secrets
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/ready
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: cache
          mountPath: /app/cache
      volumes:
      - name: tmp
        emptyDir: {}
      - name: cache
        emptyDir: {}
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: neuronews-api
  namespace: neuronews-prod
  labels:
    app: neuronews-api
    environment: production
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: http
    protocol: TCP
    name: http
  - port: 8080
    targetPort: metrics
    protocol: TCP
    name: metrics
  selector:
    app: neuronews-api
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: neuronews-api-hpa
  namespace: neuronews-prod
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: neuronews-api
  minReplicas: 3
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 60
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 70
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 15
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: neuronews-api-pdb
  namespace: neuronews-prod
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: neuronews-api
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: neuronews-api-netpol
  namespace: neuronews-prod
spec:
  podSelector:
    matchLabels:
      app: neuronews-api
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    - podSelector:
        matchLabels:
          app: neuronews-dashboard
    - podSelector:
        matchLabels:
          app: neuronews-scrapers
    ports:
    - protocol: TCP
      port: 8000
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: postgres
    ports:
    - protocol: TCP
      port: 5432
  - to:
    - podSelector:
        matchLabels:
          app: redis
    ports:
    - protocol: TCP
      port: 6379
  - {} # Allow all egress for external APIs

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: neuronews-fastapi-ingress
  namespace: neuronews
  labels:
    app: neuronews-fastapi
    component: api
    tier: backend
  annotations:
    # NGINX Ingress Controller
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    
    # Rate Limiting
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/rate-limit-connections: "10"
    
    # CORS Configuration
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
    
    # SSL Configuration
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-ciphers: "ECDHE-RSA-AES128-GCM-SHA256,ECDHE-RSA-AES256-GCM-SHA384,ECDHE-RSA-AES128-SHA,ECDHE-RSA-AES256-SHA,ECDHE-RSA-AES128-SHA256,ECDHE-RSA-AES256-SHA384"
    nginx.ingress.kubernetes.io/ssl-protocols: "TLSv1.2 TLSv1.3"
    
    # Performance Optimizations
    nginx.ingress.kubernetes.io/proxy-buffering: "on"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "8k"
    nginx.ingress.kubernetes.io/proxy-buffers-number: "8"
    nginx.ingress.kubernetes.io/client-max-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    
    # Health Check
    nginx.ingress.kubernetes.io/health-check-path: "/health"
    nginx.ingress.kubernetes.io/health-check-interval: "30s"
    nginx.ingress.kubernetes.io/health-check-timeout: "10s"
    
    # Load Balancing
    nginx.ingress.kubernetes.io/load-balance: "round_robin"
    nginx.ingress.kubernetes.io/upstream-hash-by: "$remote_addr"
    
spec:
  tls:
  - hosts:
    - api.neuronews.io
    - neuronews-api.com
    secretName: neuronews-fastapi-tls
  rules:
  - host: api.neuronews.io
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: neuronews-fastapi-internal
            port:
              number: 8000
      - path: /api/v1
        pathType: Prefix
        backend:
          service:
            name: neuronews-fastapi-internal
            port:
              number: 8000
      - path: /docs
        pathType: Exact
        backend:
          service:
            name: neuronews-fastapi-internal
            port:
              number: 8000
      - path: /openapi.json
        pathType: Exact
        backend:
          service:
            name: neuronews-fastapi-internal
            port:
              number: 8000
      - path: /health
        pathType: Exact
        backend:
          service:
            name: neuronews-fastapi-internal
            port:
              number: 8000
      - path: /metrics
        pathType: Exact
        backend:
          service:
            name: neuronews-fastapi-internal
            port:
              number: 8000
  - host: neuronews-api.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: neuronews-fastapi-internal
            port:
              number: 8000

---
apiVersion: v1
kind: Secret
metadata:
  name: neuronews-fastapi-tls
  namespace: neuronews
type: kubernetes.io/tls
data:
  # Base64 encoded TLS certificate and private key
  # These should be replaced with actual certificate data
  tls.crt: LS0tLS1CRUdJTi... # Certificate data here
  tls.key: LS0tLS1CRUdJTi... # Private key data here

# VPA Monitoring Rules for NeuroNews FinOps
# Tracks VPA recommendations and resource allocation improvements

groups:
- name: vpa-rightsizing
  rules:
  # VPA Recommendation Availability
  - alert: VPARecommendationMissing
    expr: |
      (
        time() - vpa_last_recommendation_timestamp
      ) > 3600
    for: 30m
    labels:
      severity: warning
      component: vpa
      pipeline: "{{ $labels.target_namespace }}"
    annotations:
      summary: "VPA {{ $labels.vpa_name }} has not provided recommendations recently"
      description: |
        VPA {{ $labels.vpa_name }} in namespace {{ $labels.target_namespace }} 
        has not updated recommendations for over 1 hour.
        
        This may indicate:
        - Insufficient metrics data
        - VPA recommender issues
        - Target workload not running
        
        Current gap: {{ $value }}s

  # Resource Allocation Efficiency (DoD Metric)
  - record: vpa:container_allocation_efficiency:ratio
    expr: |
      (
        rate(container_cpu_usage_seconds_total[5m]) /
        (kube_pod_container_resource_requests{resource="cpu"} / 1000)
      )
    labels:
      resource: "cpu"

  - record: vpa:container_allocation_efficiency:ratio
    expr: |
      (
        container_memory_working_set_bytes /
        kube_pod_container_resource_requests{resource="memory"}
      )
    labels:
      resource: "memory"

  # Alert when VPA Auto mode improves efficiency
  - alert: VPAResourceAllocationImproved
    expr: |
      (
        avg_over_time(vpa:container_allocation_efficiency:ratio{resource="cpu"}[1h]) -
        avg_over_time(vpa:container_allocation_efficiency:ratio{resource="cpu"} offset 7d [1h])
      ) > 0.1
    for: 2h
    labels:
      severity: info
      component: vpa
      achievement: efficiency_improvement
    annotations:
      summary: "VPA has improved CPU allocation efficiency by {{ $value | humanizePercentage }}"
      description: |
        VPA automatic rightsizing has improved CPU allocation efficiency 
        for {{ $labels.container }} in {{ $labels.namespace }}.
        
        Efficiency improvement: {{ $value | humanizePercentage }}
        
        This indicates successful resource optimization and potential cost savings.

  # Alert when resource allocation decreases (DoD requirement)
  - alert: VPAResourceAllocationReduced
    expr: |
      (
        avg_over_time(kube_pod_container_resource_requests{resource="memory"}[1h]) -
        avg_over_time(kube_pod_container_resource_requests{resource="memory"} offset 7d [1h])
      ) < -0.1 * avg_over_time(kube_pod_container_resource_requests{resource="memory"} offset 7d [1h])
    for: 1h
    labels:
      severity: info
      component: vpa
      achievement: cost_optimization
    annotations:
      summary: "VPA has reduced memory allocation by {{ $value | humanize }}B"
      description: |
        VPA automatic rightsizing has reduced memory allocation 
        for {{ $labels.container }} in {{ $labels.namespace }}.
        
        Memory reduction: {{ $value | humanize }}B
        Percentage reduction: {{ ($value / (avg_over_time(kube_pod_container_resource_requests{resource="memory"} offset 7d [1h]))) | humanizePercentage }}
        
        This indicates successful idle resource reduction and cost optimization.

  # VPA Mode Tracking
  - record: vpa:update_mode:info
    expr: |
      label_replace(
        vpa_spec_update_policy_update_mode,
        "update_mode_text",
        "$1",
        "update_mode",
        "(.*)"
      )

  # Pipeline-specific VPA Coverage
  - record: vpa:pipeline_coverage:ratio
    expr: |
      (
        count by (pipeline) (
          label_replace(
            kube_deployment_labels{label_pipeline=~"ingest|dbt"},
            "pipeline", "$1", "label_pipeline", "(.*)"
          )
          and on (namespace, deployment) 
          vpa_status_recommendation{target_kind="Deployment"}
        )
      ) /
      (
        count by (pipeline) (
          label_replace(
            kube_deployment_labels{label_pipeline=~"ingest|dbt"},
            "pipeline", "$1", "label_pipeline", "(.*)"
          )
        )
      )

  # Alert for incomplete VPA coverage
  - alert: VPAPipelineCoverageIncomplete
    expr: vpa:pipeline_coverage:ratio < 0.8
    for: 15m
    labels:
      severity: warning
      component: vpa
    annotations:
      summary: "VPA coverage for {{ $labels.pipeline }} pipeline is only {{ $value | humanizePercentage }}"
      description: |
        VPA coverage for the {{ $labels.pipeline }} pipeline is incomplete.
        
        Current coverage: {{ $value | humanizePercentage }}
        
        This may indicate:
        - Missing VPA objects for some workloads
        - VPA objects not generating recommendations
        - Target workloads not running

  # Cost Impact Tracking
  - record: vpa:cost_impact:monthly_savings
    expr: |
      (
        (
          avg_over_time(opencost_container_cpu_cost_hourly offset 7d [1h]) -
          avg_over_time(opencost_container_cpu_cost_hourly[1h])
        ) +
        (
          avg_over_time(opencost_container_memory_cost_hourly offset 7d [1h]) -
          avg_over_time(opencost_container_memory_cost_hourly[1h])
        )
      ) * 24 * 30

  # Utilization Improvement Tracking (DoD requirement)
  - record: vpa:utilization_improvement:cpu
    expr: |
      avg_over_time(vpa:container_allocation_efficiency:ratio{resource="cpu"}[1h]) -
      avg_over_time(vpa:container_allocation_efficiency:ratio{resource="cpu"} offset 7d [1h])

  - record: vpa:utilization_improvement:memory
    expr: |
      avg_over_time(vpa:container_allocation_efficiency:ratio{resource="memory"}[1h]) -
      avg_over_time(vpa:container_allocation_efficiency:ratio{resource="memory"} offset 7d [1h])

  # Alert for sustained utilization improvement
  - alert: VPAUtilizationSustainedImprovement
    expr: |
      vpa:utilization_improvement:cpu > 0.15 or
      vpa:utilization_improvement:memory > 0.15
    for: 24h
    labels:
      severity: info
      component: vpa
      achievement: sustained_optimization
    annotations:
      summary: "VPA has sustained {{ $labels.resource }} utilization improvement for 24h"
      description: |
        VPA has maintained improved {{ $labels.resource }} utilization 
        for {{ $labels.container }} in {{ $labels.namespace }} for 24 hours.
        
        Utilization improvement: {{ $value | humanizePercentage }}
        
        This indicates successful rightsizing with sustained benefits.

- name: vpa-health
  rules:
  # VPA Component Health
  - alert: VPAComponentDown
    expr: up{job="vpa-recommender"} == 0 or up{job="vpa-updater"} == 0 or up{job="vpa-admission-controller"} == 0
    for: 5m
    labels:
      severity: critical
      component: vpa
    annotations:
      summary: "VPA component {{ $labels.job }} is down"
      description: |
        VPA component {{ $labels.job }} is not responding.
        
        This will prevent:
        - New recommendations (recommender)
        - Automatic pod updates (updater)  
        - Admission control (admission-controller)
        
        Check pod status: kubectl get pods -n vpa-system

  # VPA Recommender Memory Usage
  - alert: VPARecommenderHighMemory
    expr: |
      container_memory_working_set_bytes{pod=~"vpa-recommender.*", container="recommender"} > 800 * 1024 * 1024
    for: 15m
    labels:
      severity: warning
      component: vpa
    annotations:
      summary: "VPA Recommender using {{ $value | humanize }}B memory"
      description: |
        VPA Recommender is using high memory: {{ $value | humanize }}B
        
        This may indicate:
        - Large number of VPA objects
        - Memory leak in recommender
        - Insufficient resource limits
        
        Consider scaling up or investigating memory usage patterns.

  # VPA Error Rate
  - alert: VPAHighErrorRate
    expr: |
      rate(vpa_recommender_errors_total[5m]) > 0.1
    for: 10m
    labels:
      severity: warning
      component: vpa
    annotations:
      summary: "VPA error rate is {{ $value | humanizePercentage }}"
      description: |
        VPA is experiencing high error rate: {{ $value | humanizePercentage }}
        
        Check VPA logs for specific errors:
        kubectl logs -n vpa-system deployment/vpa-recommender

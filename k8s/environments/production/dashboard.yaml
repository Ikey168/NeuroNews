apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: neuronews-dashboard
  namespace: neuronews
  labels:
    app: neuronews-dashboard
    component: dashboard
    environment: production
spec:
  replicas: 3
  strategy:
    canary:
      steps:
      - setWeight: 20
      - pause: {duration: 2m}
      - setWeight: 40
      - pause: {duration: 2m}
      - setWeight: 60
      - pause: {duration: 2m}
      - setWeight: 80
      - pause: {duration: 2m}
      canaryService: neuronews-dashboard-canary
      stableService: neuronews-dashboard-stable
      trafficRouting:
        nginx:
          stableIngress: neuronews-dashboard-ingress
          annotationPrefix: nginx.ingress.kubernetes.io
          additionalIngressAnnotations:
            canary-by-header: X-Canary
      analysis:
        templates:
        - templateName: success-rate
        startingStep: 2
        args:
        - name: service-name
          value: neuronews-dashboard-canary
  selector:
    matchLabels:
      app: neuronews-dashboard
  template:
    metadata:
      labels:
        app: neuronews-dashboard
        component: dashboard
        environment: production
    spec:
      serviceAccountName: neuronews-dashboard
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: neuronews-dashboard
        image: ghcr.io/ikey168/neuronews/dashboard:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3000"
        - name: API_BASE_URL
          value: "http://neuronews-api.neuronews.svc.cluster.local"
        - name: PUBLIC_URL
          value: "https://neuronews.com"
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: nextjs-cache
          mountPath: /app/.next/cache
      volumes:
      - name: tmp
        emptyDir: {}
      - name: nextjs-cache
        emptyDir: {}
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
      - key: node.kubernetes.io/not-ready
        operator: Exists
        effect: NoExecute
        tolerationSeconds: 300
      - key: node.kubernetes.io/unreachable
        operator: Exists
        effect: NoExecute
        tolerationSeconds: 300
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - neuronews-dashboard
              topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: Service
metadata:
  name: neuronews-dashboard-stable
  namespace: neuronews
  labels:
    app: neuronews-dashboard
    component: dashboard
    environment: production
    service-type: stable
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 3000
    protocol: TCP
    name: http
  selector:
    app: neuronews-dashboard
---
apiVersion: v1
kind: Service
metadata:
  name: neuronews-dashboard-canary
  namespace: neuronews
  labels:
    app: neuronews-dashboard
    component: dashboard
    environment: production
    service-type: canary
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 3000
    protocol: TCP
    name: http
  selector:
    app: neuronews-dashboard
---
# Backward compatibility service
apiVersion: v1
kind: Service
metadata:
  name: neuronews-dashboard
  namespace: neuronews
  labels:
    app: neuronews-dashboard
    component: dashboard
    environment: production
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 3000
    protocol: TCP
    name: http
  selector:
    app: neuronews-dashboard
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: neuronews-dashboard
  namespace: neuronews
  labels:
    app: neuronews-dashboard
    component: dashboard
    environment: production
automountServiceAccountToken: false

apiVersion: v1
kind: ConfigMap
metadata:
  name: neuronews-scrapers-config
  namespace: neuronews-staging
data:
  DATABASE_URL: "postgresql://neuronews:password@postgres-service:5432/neuronews_staging"
  REDIS_URL: "redis://redis-service:6379/0"
  ENVIRONMENT: "staging"
  LOG_LEVEL: "DEBUG"
  SCRAPER_INTERVAL: "300"  # 5 minutes for staging
  MAX_ARTICLES_PER_SOURCE: "50"
  BATCH_SIZE: "10"
  REQUEST_TIMEOUT: "30"
  MAX_RETRIES: "3"
  RATE_LIMIT_DELAY: "1"
---
apiVersion: v1
kind: Secret
metadata:
  name: neuronews-scrapers-secrets
  namespace: neuronews-staging
type: Opaque
data:
  NEWS_API_KEY: ""  # Add your News API key (base64 encoded)
  GUARDIAN_API_KEY: ""  # Add your Guardian API key (base64 encoded)
  NYT_API_KEY: ""  # Add your NYT API key (base64 encoded)
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: neuronews-scrapers
  namespace: neuronews-staging
  labels:
    app: neuronews-scrapers
    environment: staging
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      app: neuronews-scrapers
  template:
    metadata:
      labels:
        app: neuronews-scrapers
        environment: staging
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: scrapers
        image: neuronews/scrapers:staging
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: metrics
        env:
        - name: METRICS_PORT
          value: "8080"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        envFrom:
        - configMapRef:
            name: neuronews-scrapers-config
        - secretRef:
            name: neuronews-scrapers-secrets
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "400m"
        livenessProbe:
          httpGet:
            path: /health
            port: metrics
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/ready
            port: metrics
          initialDelaySeconds: 30
          periodSeconds: 15
          timeoutSeconds: 5
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: cache
          mountPath: /app/cache
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: tmp
        emptyDir: {}
      - name: cache
        emptyDir: {}
      - name: logs
        emptyDir: {}
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: neuronews-scrapers
  namespace: neuronews-staging
  labels:
    app: neuronews-scrapers
    environment: staging
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: metrics
    protocol: TCP
    name: metrics
  selector:
    app: neuronews-scrapers
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: neuronews-scraper-cleanup
  namespace: neuronews-staging
  labels:
    app: neuronews-scrapers
    component: cleanup
    environment: staging
spec:
  schedule: "0 2 * * *"  # Run daily at 2 AM
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: neuronews-scrapers
            component: cleanup
        spec:
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            fsGroup: 1000
          containers:
          - name: cleanup
            image: neuronews/scrapers:staging
            imagePullPolicy: Always
            command:
            - python
            - -m
            - src.cleanup
            - --days
            - "7"
            envFrom:
            - configMapRef:
                name: neuronews-scrapers-config
            - secretRef:
                name: neuronews-scrapers-secrets
            resources:
              requests:
                memory: "128Mi"
                cpu: "100m"
              limits:
                memory: "256Mi"
                cpu: "200m"
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                - ALL
            volumeMounts:
            - name: tmp
              mountPath: /tmp
          volumes:
          - name: tmp
            emptyDir: {}
          restartPolicy: OnFailure
      backoffLimit: 3
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3

# Spark Configuration for Iceberg Integration
# This configuration enables Apache Iceberg table format support with REST catalog and S3A storage

# Iceberg Spark Extensions - enables Iceberg SQL and Dataset v2 features
spark.sql.extensions=org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions

# Iceberg REST Catalog Configuration
# Demo catalog using REST API for metadata management
spark.sql.catalog.demo=org.apache.iceberg.spark.SparkCatalog
spark.sql.catalog.demo.type=rest
spark.sql.catalog.demo.uri=http://iceberg-rest:8181
spark.sql.catalog.demo.warehouse=s3a://warehouse

# S3A Configuration for MinIO (S3-compatible storage)
# Endpoint configuration for local MinIO instance
fs.s3a.endpoint=http://minio:9000

# Authentication credentials for MinIO
fs.s3a.access.key=minio
fs.s3a.secret.key=minio123

# Enable path-style access (required for MinIO and some S3-compatible stores)
fs.s3a.path.style.access=true

# Additional S3A optimizations for better performance
fs.s3a.impl=org.apache.hadoop.fs.s3a.S3AFileSystem
fs.s3a.fast.upload=true
fs.s3a.block.size=128M
fs.s3a.multipart.size=64M
fs.s3a.multipart.threshold=128M

# Iceberg table properties defaults
spark.sql.catalog.demo.io-impl=org.apache.iceberg.aws.s3.S3FileIO

# Memory and performance tuning
spark.sql.adaptive.enabled=true
spark.sql.adaptive.coalescePartitions.enabled=true
spark.serializer=org.apache.spark.serializer.KryoSerializer

# Enable Iceberg vectorized reads for better performance
spark.sql.iceberg.vectorization.enabled=true

# Set default catalog for convenience (optional)
spark.sql.defaultCatalog=demo

"""
Auto-generated types from Avro schema: sentiment_analyzed
Generated at: 2025-08-28 18:26:54

DO NOT EDIT THIS FILE MANUALLY!
This file is auto-generated from contract schemas.
To make changes, update the schema file and regenerate.
"""

from __future__ import annotations

import json
from datetime import datetime
from typing import Any, Dict, List, Optional, Union
from pydantic import BaseModel, Field, validator
from dataclasses import dataclass


from datetime import datetime
from datetime import time
from typing import Literal

class Sentimentanalyzed(BaseModel):
    """Event published when sentiment analysis is completed for an article"""
    
    article_id: str = Field(..., description="Reference to the analyzed article (UUID v4 format)")
    sentiment_score: float = Field(..., description="Sentiment score between -1.0 (negative) and 1.0 (positive)")
    sentiment_label: Literal['POSITIVE', 'NEGATIVE', 'NEUTRAL'] = Field(..., description="Categorical sentiment classification")
    confidence: float = Field(..., description="Confidence score of sentiment analysis (0.0 to 1.0)")
    model_version: str = Field(..., description="Version of the sentiment analysis model used")
    processed_at: int = Field(..., description="Timestamp when sentiment analysis was completed")
    processing_time_ms: int = Field(..., description="Time taken for sentiment analysis in milliseconds")
    emotions: Optional[List[Emotion]] = Field(None, description="Additional emotion analysis results")
    
    class Config:
        """Pydantic model configuration."""
        allow_population_by_field_name = True
        json_encoders = {
            datetime: lambda v: int(v.timestamp() * 1000),  # Convert to milliseconds
        }
        
    @classmethod
    def from_avro_dict(cls, data: Dict[str, Any]) -> 'Sentimentanalyzed':
        """Create instance from Avro dictionary."""
        return cls(**data)
    
    def to_avro_dict(self) -> Dict[str, Any]:
        """Convert to Avro-compatible dictionary."""
        return self.dict()

"""
Auto-generated types from JSON Schema schema: search_request
Generated at: 2025-08-28 18:26:54

DO NOT EDIT THIS FILE MANUALLY!
This file is auto-generated from contract schemas.
To make changes, update the schema file and regenerate.
"""

from __future__ import annotations

import json
from datetime import datetime
from typing import Any, Dict, List, Optional, Union
from pydantic import BaseModel, Field, validator
from dataclasses import dataclass


from typing import Literal

class SearchRequest(BaseModel):
    """Schema for search API requests"""
    
    query: str = Field(min_length=1, max_length=1000, description="Search query text")
    type: Literal['keyword', 'semantic', 'hybrid', 'faceted'] = Field(default="keyword", description="Type of search to perform")
    filters: Optional[Dict[str, Any]] = Field(default=None, description="Search filters to apply")
    pagination: Optional[Dict[str, Any]] = Field(default=None, description="Pagination parameters")
    sort: Optional[Dict[str, Any]] = Field(default=None, description="Result sorting configuration")
    
    class Config:
        """Pydantic model configuration."""
        allow_population_by_field_name = True
        extra = "forbid"  # Prevent additional fields
        
    @classmethod
    def from_json_dict(cls, data: Dict[str, Any]) -> 'SearchRequest':
        """Create instance from JSON dictionary."""
        return cls(**data)
    
    def to_json_dict(self) -> Dict[str, Any]:
        """Convert to JSON-compatible dictionary."""
        return self.dict(exclude_none=True)

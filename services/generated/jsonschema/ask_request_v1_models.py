"""
Auto-generated types from JSON Schema schema: ask_request_v1
Generated at: 2025-08-28 18:26:54

DO NOT EDIT THIS FILE MANUALLY!
This file is auto-generated from contract schemas.
To make changes, update the schema file and regenerate.
"""

from __future__ import annotations

import json
from datetime import datetime
from typing import Any, Dict, List, Optional, Union
from pydantic import BaseModel, Field, validator
from dataclasses import dataclass


from typing import Literal

class AskRequest(BaseModel):
    """Request schema for the /ask API endpoint for question answering with citations"""
    
    question: str = Field(min_length=3, max_length=500, description="The question to answer")
    k: int = Field(default=5, ge=1, le=20, description="Number of documents to retrieve for context")
    filters: Optional[Dict[str, Any]] = Field(default=None, description="Filters to apply during document retrieval")
    rerank_on: bool = Field(default=True, description="Whether to enable reranking of retrieved documents")
    fusion: bool = Field(default=True, description="Whether to enable query fusion for better retrieval")
    provider: Literal['openai', 'anthropic', 'cohere', 'huggingface'] = Field(default="openai", description="Answer generation provider to use")
    
    class Config:
        """Pydantic model configuration."""
        allow_population_by_field_name = True
        extra = "forbid"  # Prevent additional fields
        
    @classmethod
    def from_json_dict(cls, data: Dict[str, Any]) -> 'AskRequest':
        """Create instance from JSON dictionary."""
        return cls(**data)
    
    def to_json_dict(self) -> Dict[str, Any]:
        """Convert to JSON-compatible dictionary."""
        return self.dict(exclude_none=True)

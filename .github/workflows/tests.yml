name: Tests

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      neptune-local:
        image: amazon/neptune-gremlin-server:latest
        ports:
          - 8182:8182
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run base pipeline tests
      run: |
        python -m pytest tests/test_base_pipelines.py -v

    - name: Run base NLP tests
      run: |
        python -m pytest tests/test_base_nlp.py -v

    - name: Run unit tests
      run: |
        python -m pytest tests/ -v --ignore=tests/nlp/test_sentiment.py --ignore=tests/integration

    - name: Run integration tests
      env:
        NEPTUNE_ENDPOINT: localhost
      run: |
        python -m pytest tests/integration/test_graph_integration.py -v

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: test-results
        path: |
          test-results/
          coverage/

  terraform:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      
    - name: Initialize Terraform
      run: |
        cd deployment/terraform
        terraform init -backend=false
      
    - name: Validate Terraform Configuration
      run: |
        cd deployment/terraform
        terraform validate
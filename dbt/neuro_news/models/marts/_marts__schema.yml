version: 2

models:
  - name: dim_source
    description: "Dimension table for news sources containing publisher/site metadata"
    config:
      contract:
        enforced: true
    columns:
      - name: source_key
        description: "Surrogate key for the source dimension"
        data_type: varchar
        tests:
          - not_null
          - unique
      - name: source_id
        description: "Natural key from staging sources"
        data_type: varchar
        tests:
          - not_null
          - unique
      - name: source_name
        description: "Name of the news source/publisher"
        data_type: varchar
        tests:
          - not_null
      - name: domain
        description: "Domain extracted from base URL"
        data_type: varchar
        tests:
          - not_null
      - name: base_url
        description: "Base URL of the news source"
        data_type: varchar
        tests:
          - not_null
      - name: country_code
        description: "ISO country code for the source"
        data_type: varchar
        tests:
          - not_null
          - accepted_values:
              values: ['US', 'UK', 'CA', 'AU', 'DE', 'FR', 'ES', 'IT', 'JP', 'CN', 'RU', 'BR', 'IN', 'MX', 'NL', 'SE', 'NO', 'FI', 'DK', 'unknown']
      - name: language_code
        description: "ISO language code for the source"
        data_type: varchar
        tests:
          - not_null
          - accepted_values:
              values: ['en', 'es', 'fr', 'de', 'it', 'pt', 'ru', 'zh', 'ja', 'ar', 'unknown']
      - name: category
        description: "Primary category of the news source"
        data_type: varchar
        tests:
          - not_null
          - accepted_values:
              values: ['technology', 'politics', 'business', 'sports', 'entertainment', 'science', 'health', 'environment', 'finance', 'general', 'other']
      - name: is_scraping_enabled
        description: "Whether scraping is currently enabled for this source"
        data_type: boolean
        tests:
          - not_null
          - accepted_values:
              values: [true, false]
      - name: created_at_utc
        description: "When the source was first added (UTC)"
        data_type: timestamp
        tests:
          - not_null
      - name: updated_at_utc
        description: "When the source was last updated (UTC)"
        data_type: timestamp
        tests:
          - not_null
      - name: dbt_loaded_at
        description: "When this record was loaded by dbt"
        data_type: "timestamp with time zone"
        tests:
          - not_null

  - name: dim_entity
    description: "Dimension table for normalized entities (person/org/topic)"
    config:
      contract:
        enforced: true
    columns:
      - name: entity_key
        description: "Surrogate key for the entity dimension"
        data_type: varchar
        tests:
          - not_null
          - unique
          - dbt_expectations.expect_column_values_to_be_unique:
              config:
                tags: ['dq']
          - dbt_expectations.expect_column_values_to_not_be_null:
              config:
                tags: ['dq']
      - name: entity_id
        description: "Natural key from staging entities"
        data_type: varchar
        tests:
          - not_null
          - unique
      - name: entity_text
        description: "The actual entity text/name"
        data_type: varchar
        tests:
          - not_null
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              min_value: 1
              max_value: 500
              config:
                tags: ['dq']
      - name: entity_type
        description: "Normalized entity type"
        data_type: varchar
        tests:
          - not_null
          - accepted_values:
              values: ['PERSON', 'ORG', 'GPE', 'LOC', 'EVENT', 'PRODUCT', 'WORK_OF_ART', 'LAW', 'LANGUAGE', 'DATE', 'TIME', 'PERCENT', 'MONEY', 'QUANTITY', 'ORDINAL', 'CARDINAL', 'MISC']
      - name: entity_category
        description: "High-level category grouping"
        data_type: varchar
        tests:
          - not_null
          - accepted_values:
              values: ['PERSON', 'ORGANIZATION', 'LOCATION', 'EVENT', 'PRODUCT', 'TEMPORAL', 'NUMERICAL', 'OTHER']
      - name: avg_confidence_score
        description: "Average confidence score across all mentions"
        data_type: double
        tests:
          - not_null
          - dbt_utils.expression_is_true:
              expression: "avg_confidence_score >= 0.0 AND avg_confidence_score <= 1.0"
              config:
                tags: ['dq']
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0.0
              max_value: 1.0
              config:
                tags: ['dq']
      - name: mention_count
        description: "Total number of mentions across all articles"
        data_type: bigint
        tests:
          - not_null
          - dbt_utils.expression_is_true:
              expression: "mention_count > 0"
              config:
                tags: ['dq']
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 1
              max_value: 10000
              config:
                tags: ['dq']
      - name: first_mention_at_utc
        description: "When this entity was first mentioned (UTC)"
        data_type: timestamp
        tests:
          - not_null
      - name: last_mention_at_utc
        description: "When this entity was last mentioned (UTC)"
        data_type: timestamp
        tests:
          - not_null
      - name: dbt_loaded_at
        description: "When this record was loaded by dbt"
        data_type: "timestamp with time zone"
        tests:
          - not_null

  - name: fact_news
    description: "Fact table for news articles with grain = article"
    config:
      contract:
        enforced: true
    columns:
      - name: article_key
        description: "Surrogate key for the fact table"
        data_type: varchar
        tests:
          - not_null
          - unique
      - name: article_id
        description: "Natural key from staging news"
        data_type: varchar
        tests:
          - not_null
          - unique
      - name: source_key
        description: "Foreign key to dim_source"
        data_type: varchar
        tests:
          - not_null
          - relationships:
              to: ref('dim_source')
              field: source_key
          - dbt_utils.relationships_where:
              to: ref('dim_source')
              field: source_key
              config:
                tags: ['dq']
      - name: title
        description: "Article title/headline"
        data_type: varchar
        tests:
          - not_null
      - name: content_length
        description: "Length of article content in characters"
        data_type: bigint
        tests:
          - not_null
          - dbt_utils.expression_is_true:
              expression: "content_length > 0"
              config:
                tags: ['dq']
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 50
              max_value: 100000
              config:
                tags: ['dq']
      - name: title_length
        description: "Length of article title in characters"
        data_type: bigint
        tests:
          - not_null
      - name: url
        description: "Source URL of the article"
        data_type: varchar
        tests:
          - not_null
          - unique
      - name: language_code
        description: "Detected/assigned language code"
        data_type: varchar
        tests:
          - not_null
          - accepted_values:
              values: ['en', 'es', 'fr', 'de', 'it', 'pt', 'ru', 'zh', 'ja', 'ar', 'unknown']
      - name: category
        description: "Article category/topic"
        data_type: varchar
        tests:
          - not_null
          - accepted_values:
              values: ['technology', 'politics', 'business', 'sports', 'entertainment', 'science', 'health', 'environment', 'finance', 'other']
      - name: is_duplicate
        description: "Whether this article was identified as a duplicate"
        data_type: boolean
        tests:
          - not_null
          - accepted_values:
              values: [true, false]
      - name: entity_count
        description: "Number of entities extracted from this article"
        data_type: bigint
        tests:
          - not_null
          - dbt_utils.expression_is_true:
              expression: "entity_count >= 0"
              config:
                tags: ['dq']
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              max_value: 1000
              config:
                tags: ['dq']
      - name: avg_entity_confidence
        description: "Average confidence score of entities in this article"
        data_type: double
        tests:
          - dbt_utils.expression_is_true:
              expression: "avg_entity_confidence IS NULL OR (avg_entity_confidence >= 0.0 AND avg_entity_confidence <= 1.0)"
              config:
                tags: ['dq']
      - name: published_at_utc
        description: "When the article was originally published (UTC)"
        data_type: timestamp
      - name: scraped_at_utc
        description: "When the article was scraped (UTC)"
        data_type: timestamp
        tests:
          - not_null
      - name: created_at_utc
        description: "When the article record was created (UTC)"
        data_type: timestamp
        tests:
          - not_null
      - name: updated_at_utc
        description: "When the article record was last updated (UTC)"
        data_type: timestamp
        tests:
          - not_null
      - name: dbt_loaded_at
        description: "When this record was loaded by dbt"
        data_type: "timestamp with time zone"
        tests:
          - not_null

# Relationship tests between facts and dimensions
tests:
  - name: test_fact_news_source_relationship
    description: "Ensure all fact_news records have valid source_key references"
  - name: test_entity_mentions_exist
    description: "Ensure entities referenced in fact_news actually exist"

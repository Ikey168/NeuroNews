---
# CloudWatch ConfigMap for Fluent Bit
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluent-bit-config
  namespace: monitoring
  labels:
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/component: logging
data:
  fluent-bit.conf: |
    [SERVICE]
        Daemon Off
        Flush 1
        Log_Level info
        Parsers_File parsers.conf
        HTTP_Server On
        HTTP_Listen 0.0.0.0
        HTTP_Port 2020
        Health_Check On

    [INPUT]
        Name tail
        Path /var/log/containers/neuronews-*.log
        multiline.parser docker, cri
        Tag kube.*
        Mem_Buf_Limit 50MB
        Skip_Long_Lines On

    [INPUT]
        Name tail
        Path /var/log/containers/*scraper*.log
        multiline.parser docker, cri
        Tag scraper.*
        Mem_Buf_Limit 50MB
        Skip_Long_Lines On

    [INPUT]
        Name tail
        Path /var/log/containers/*nlp*.log
        multiline.parser docker, cri
        Tag nlp.*
        Mem_Buf_Limit 50MB
        Skip_Long_Lines On

    [FILTER]
        Name kubernetes
        Match kube.*
        Kube_URL https://kubernetes.default.svc:443
        Kube_CA_File /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        Kube_Token_File /var/run/secrets/kubernetes.io/serviceaccount/token
        Kube_Tag_Prefix kube.var.log.containers.
        Merge_Log On
        Merge_Log_Key log_processed
        K8S-Logging.Parser On
        K8S-Logging.Exclude Off

    [FILTER]
        Name kubernetes
        Match scraper.*
        Kube_URL https://kubernetes.default.svc:443
        Kube_CA_File /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        Kube_Token_File /var/run/secrets/kubernetes.io/serviceaccount/token
        Kube_Tag_Prefix scraper.var.log.containers.
        Merge_Log On
        Merge_Log_Key log_processed
        K8S-Logging.Parser On
        K8S-Logging.Exclude Off

    [FILTER]
        Name kubernetes
        Match nlp.*
        Kube_URL https://kubernetes.default.svc:443
        Kube_CA_File /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        Kube_Token_File /var/run/secrets/kubernetes.io/serviceaccount/token
        Kube_Tag_Prefix nlp.var.log.containers.
        Merge_Log On
        Merge_Log_Key log_processed
        K8S-Logging.Parser On
        K8S-Logging.Exclude Off

    [FILTER]
        Name grep
        Match kube.*
        Regex log (ERROR|WARN|INFO|DEBUG)

    [FILTER]
        Name grep
        Match scraper.*
        Regex log (ERROR|WARN|INFO|DEBUG|scraper_job_)

    [FILTER]
        Name grep
        Match nlp.*
        Regex log (ERROR|WARN|INFO|DEBUG|nlp_processing_)

    [OUTPUT]
        Name cloudwatch_logs
        Match kube.*
        region us-east-1
        log_group_name /aws/kubernetes/neuronews/application
        log_stream_prefix application-
        auto_create_group true
        extra_user_agent container-insights

    [OUTPUT]
        Name cloudwatch_logs
        Match scraper.*
        region us-east-1
        log_group_name /aws/kubernetes/neuronews/scrapers
        log_stream_prefix scraper-
        auto_create_group true
        extra_user_agent container-insights

    [OUTPUT]
        Name cloudwatch_logs
        Match nlp.*
        region us-east-1
        log_group_name /aws/kubernetes/neuronews/nlp
        log_stream_prefix nlp-
        auto_create_group true
        extra_user_agent container-insights

  parsers.conf: |
    [PARSER]
        Name docker
        Format json
        Time_Key time
        Time_Format %Y-%m-%dT%H:%M:%S.%L
        Time_Keep On

    [PARSER]
        Name cri
        Format regex
        Regex ^(?<time>[^ ]+) (?<stream>stdout|stderr) (?<logtag>[^ ]*) (?<message>.*)$
        Time_Key time
        Time_Format %Y-%m-%dT%H:%M:%S.%L%z

    [PARSER]
        Name neuronews_json
        Format json
        Time_Key timestamp
        Time_Format %Y-%m-%d %H:%M:%S
        Time_Keep On
        Decode_Field_As escaped log

    [PARSER]
        Name scraper_log
        Format regex
        Regex ^\[(?<timestamp>[^\]]*)\] (?<level>[A-Z]+) - (?<scraper_name>[^:]+): (?<message>.*)$
        Time_Key timestamp
        Time_Format %Y-%m-%d %H:%M:%S

    [PARSER]
        Name nlp_log
        Format regex
        Regex ^\[(?<timestamp>[^\]]*)\] (?<level>[A-Z]+) - NLP: (?<message>.*)$
        Time_Key timestamp
        Time_Format %Y-%m-%d %H:%M:%S
---
# CloudWatch ServiceAccount
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fluent-bit
  namespace: monitoring
  labels:
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/component: logging
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::YOUR_ACCOUNT_ID:role/FluentBitCloudWatchRole
---
# CloudWatch ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: fluent-bit
  labels:
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/component: logging
rules:
- apiGroups: [""]
  resources:
    - namespaces
    - pods
    - nodes
    - nodes/proxy
  verbs: ["get", "list", "watch"]
---
# CloudWatch ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: fluent-bit
  labels:
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/component: logging
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: fluent-bit
subjects:
- kind: ServiceAccount
  name: fluent-bit
  namespace: monitoring
---
# Fluent Bit DaemonSet
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: fluent-bit
  namespace: monitoring
  labels:
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/component: logging
    app.kubernetes.io/part-of: neuronews
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: fluent-bit
  template:
    metadata:
      labels:
        app.kubernetes.io/name: fluent-bit
        app.kubernetes.io/component: logging
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "2020"
        prometheus.io/path: "/api/v1/metrics/prometheus"
    spec:
      serviceAccountName: fluent-bit
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      - operator: "Exists"
        effect: "NoExecute"
      - operator: "Exists"
        effect: "NoSchedule"
      containers:
      - name: fluent-bit
        image: fluent/fluent-bit:2.1.8
        ports:
        - containerPort: 2020
          name: metrics
          protocol: TCP
        env:
        - name: AWS_REGION
          value: "us-east-1"
        - name: CLUSTER_NAME
          value: "neuronews"
        - name: HTTP_SERVER
          value: "On"
        - name: HTTP_PORT
          value: "2020"
        - name: READ_FROM_HEAD
          value: "Off"
        - name: READ_FROM_TAIL
          value: "On"
        - name: HOST_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CI_VERSION
          value: "k8s/1.3.12"
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
          limits:
            cpu: 100m
            memory: 128Mi
        volumeMounts:
        - name: fluentbitstate
          mountPath: /var/fluent-bit/state
        - name: varlog
          mountPath: /var/log
          readOnly: true
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: fluent-bit-config
          mountPath: /fluent-bit/etc/
        - name: runlogjournal
          mountPath: /run/log/journal
          readOnly: true
        - name: dmesg
          mountPath: /var/log/dmesg
          readOnly: true
        livenessProbe:
          httpGet:
            path: /
            port: 2020
          initialDelaySeconds: 10
          periodSeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /api/v1/health
            port: 2020
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
      terminationGracePeriodSeconds: 10
      volumes:
      - name: fluentbitstate
        hostPath:
          path: /var/fluent-bit/state
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: fluent-bit-config
        configMap:
          name: fluent-bit-config
      - name: runlogjournal
        hostPath:
          path: /run/log/journal
      - name: dmesg
        hostPath:
          path: /var/log/dmesg
---
# Fluent Bit Service
apiVersion: v1
kind: Service
metadata:
  name: fluent-bit
  namespace: monitoring
  labels:
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/component: logging
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "2020"
    prometheus.io/path: "/api/v1/metrics/prometheus"
spec:
  type: ClusterIP
  ports:
  - port: 2020
    targetPort: 2020
    protocol: TCP
    name: metrics
  selector:
    app.kubernetes.io/name: fluent-bit

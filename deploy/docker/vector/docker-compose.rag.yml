version: '3.8'

services:
  postgres-vector:
    image: pgvector/pgvector:pg16
    container_name: neuronews-postgres-vector
    environment:
      POSTGRES_DB: neuronews_vector
      POSTGRES_USER: neuronews
      POSTGRES_PASSWORD: neuronews_vector_pass
      POSTGRES_HOST_AUTH_METHOD: md5
    ports:
      - "5433:5432"
    volumes:
      - postgres_vector_data:/var/lib/postgresql/data
      - ./init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U neuronews -d neuronews_vector"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - vector-network
    restart: unless-stopped

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: neuronews-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@neuronews.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      postgres-vector:
        condition: service_healthy
    networks:
      - vector-network
    restart: unless-stopped

  # Optional: Redis for caching embeddings and search results
  redis:
    image: redis:7-alpine
    container_name: neuronews-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    networks:
      - vector-network
    restart: unless-stopped

networks:
  vector-network:
    driver: bridge
    name: neuronews-vector-network

volumes:
  postgres_vector_data:
    name: neuronews-postgres-vector-data
  pgadmin_data:
    name: neuronews-pgadmin-data
  redis_data:
    name: neuronews-redis-data

apiVersion: v1
kind: ServiceAccount
metadata:
  name: neuronews-nlp-processor
  namespace: neuronews
  labels:
    app: neuronews-nlp
    component: service-account
automountServiceAccountToken: true

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: neuronews
  name: neuronews-nlp-processor-role
  labels:
    app: neuronews-nlp
    component: rbac
rules:
# Job management permissions
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]
- apiGroups: ["batch"]
  resources: ["jobs/status"]
  verbs: ["get", "list", "watch"]

# Pod management for job execution
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["pods/log"]
  verbs: ["get", "list"]

# ConfigMap and Secret access
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch"]

# PersistentVolumeClaim access for model storage
- apiGroups: [""]
  resources: ["persistentvolumeclaims"]
  verbs: ["get", "list", "watch"]

# Event creation for monitoring
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]

# Node information for GPU scheduling
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "list", "watch"]

# Metrics access for monitoring
- apiGroups: ["metrics.k8s.io"]
  resources: ["pods", "nodes"]
  verbs: ["get", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: neuronews-nlp-processor-binding
  namespace: neuronews
  labels:
    app: neuronews-nlp
    component: rbac
subjects:
- kind: ServiceAccount
  name: neuronews-nlp-processor
  namespace: neuronews
roleRef:
  kind: Role
  name: neuronews-nlp-processor-role
  apiGroup: rbac.authorization.k8s.io

---
# ClusterRole for accessing GPU resources and priority classes
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: neuronews-nlp-gpu-access
  labels:
    app: neuronews-nlp
    component: rbac
rules:
# GPU resource access
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["metrics.k8s.io"]
  resources: ["nodes"]
  verbs: ["get", "list"]

# Priority class access
- apiGroups: ["scheduling.k8s.io"]
  resources: ["priorityclasses"]
  verbs: ["get", "list", "watch"]

# Resource quota monitoring
- apiGroups: [""]
  resources: ["resourcequotas"]
  verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: neuronews-nlp-gpu-access-binding
  labels:
    app: neuronews-nlp
    component: rbac
subjects:
- kind: ServiceAccount
  name: neuronews-nlp-processor
  namespace: neuronews
roleRef:
  kind: ClusterRole
  name: neuronews-nlp-gpu-access
  apiGroup: rbac.authorization.k8s.io

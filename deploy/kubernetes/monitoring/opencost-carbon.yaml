---
# OpenCost Carbon Footprint Configuration
# Enables carbon cost tracking and kgCO2e metrics for NeuroNews pipelines
apiVersion: v1
kind: ConfigMap
metadata:
  name: opencost-carbon-config
  namespace: opencost
  labels:
    app: opencost
    component: carbon-tracking
    purpose: finops
spec:
data:
  # Carbon intensity factors by AWS region (gCO2e per kWh)
  carbon-intensity.yaml: |
    # AWS regions carbon intensity (grams CO2e per kWh)
    # Data from AWS Customer Carbon Footprint Tool and Grid Emission Factors
    regions:
      us-east-1:      # N. Virginia
        carbon_intensity: 394.9  # gCO2e/kWh
        renewable_percentage: 45.2
      us-east-2:      # Ohio  
        carbon_intensity: 495.7
        renewable_percentage: 31.8
      us-west-1:      # N. California
        carbon_intensity: 263.4
        renewable_percentage: 65.1
      us-west-2:      # Oregon
        carbon_intensity: 214.7
        renewable_percentage: 73.4
      eu-west-1:      # Ireland
        carbon_intensity: 316.8
        renewable_percentage: 61.2
      eu-central-1:   # Frankfurt
        carbon_intensity: 338.1
        renewable_percentage: 58.4
      ap-southeast-1: # Singapore
        carbon_intensity: 431.6
        renewable_percentage: 38.7

  # Instance type power consumption (Watts)
  instance-power.yaml: |
    # AWS EC2 instance power consumption estimates
    # Based on AWS Sustainability reports and third-party measurements
    instance_types:
      # General Purpose (M5)
      m5.large:     85    # 2 vCPU, 8 GB RAM
      m5.xlarge:    170   # 4 vCPU, 16 GB RAM  
      m5.2xlarge:   340   # 8 vCPU, 32 GB RAM
      m5.4xlarge:   680   # 16 vCPU, 64 GB RAM
      
      # Compute Optimized (C5)
      c5.large:     75    # 2 vCPU, 4 GB RAM
      c5.xlarge:    150   # 4 vCPU, 8 GB RAM
      c5.2xlarge:   300   # 8 vCPU, 16 GB RAM
      c5.4xlarge:   600   # 16 vCPU, 32 GB RAM
      
      # Memory Optimized (R5)
      r5.large:     95    # 2 vCPU, 16 GB RAM
      r5.xlarge:    190   # 4 vCPU, 32 GB RAM
      r5.2xlarge:   380   # 8 vCPU, 64 GB RAM
      r5.4xlarge:   760   # 16 vCPU, 128 GB RAM
      
      # Burstable (T3)
      t3.micro:     10    # 2 vCPU, 1 GB RAM
      t3.small:     20    # 2 vCPU, 2 GB RAM
      t3.medium:    30    # 2 vCPU, 4 GB RAM
      t3.large:     40    # 2 vCPU, 8 GB RAM
      
      # GPU Instances (P3)
      p3.2xlarge:   750   # 8 vCPU + V100 GPU
      p3.8xlarge:   2400  # 32 vCPU + 4x V100
      
      # Default fallback
      default:      100   # Conservative estimate

  # Carbon calculation configuration
  carbon-config.yaml: |
    carbon:
      enabled: true
      # Default region if not detected
      default_region: "us-east-1"
      
      # Power Usage Effectiveness (PUE) for AWS data centers
      # AWS reports PUE of 1.135 (industry leading)
      pue: 1.135
      
      # Include carbon cost in total cost calculations
      include_in_cost: true
      
      # Carbon price for internal accounting ($/tonne CO2e)
      # Using social cost of carbon (~$185/tonne as of 2024)
      carbon_price_per_tonne: 185.0
      
      # Enable detailed carbon metrics
      detailed_metrics: true
      
      # Carbon reporting intervals
      metrics_interval: "1m"
      aggregation_interval: "1h"

---
# OpenCost Deployment with Carbon Tracking Enabled
apiVersion: apps/v1
kind: Deployment
metadata:
  name: opencost
  namespace: opencost
  labels:
    app: opencost
    component: cost-analyzer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: opencost
  template:
    metadata:
      labels:
        app: opencost
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '9003'
        prometheus.io/path: '/metrics'
    spec:
      serviceAccountName: opencost
      containers:
      - name: opencost
        image: quay.io/kubecost/kubecost-cost-model:latest
        ports:
        - containerPort: 9003
          name: http
        - containerPort: 9090
          name: ui
        env:
        # Basic OpenCost configuration
        - name: PROMETHEUS_SERVER_ENDPOINT
          value: "http://prometheus:9090"
        - name: CLOUD_PROVIDER_API_KEY
          valueFrom:
            secretKeyRef:
              name: opencost-secrets
              key: aws-access-key-id
              optional: true
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: opencost-secrets  
              key: aws-access-key-id
              optional: true
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: opencost-secrets
              key: aws-secret-access-key
              optional: true
        - name: AWS_CLUSTER_ID
          value: "neuronews-cluster"
        
        # Carbon tracking configuration
        - name: ENABLE_CARBON_ESTIMATION
          value: "true"
        - name: CARBON_INTENSITY_SOURCE
          value: "configmap"
        - name: CARBON_CONFIG_MAP
          value: "opencost-carbon-config"
        - name: AWS_REGION
          value: "us-east-1"
        - name: CARBON_PRICE_PER_TONNE
          value: "185.0"
        - name: INCLUDE_CARBON_IN_COST
          value: "true"
        
        # FinOps integration
        - name: EMIT_POD_ANNOTATIONS_METRIC
          value: "true"
        - name: EMIT_NAMESPACE_ANNOTATIONS_METRIC  
          value: "true"
        - name: EMIT_KSM_V1_METRICS
          value: "true"
        - name: EMIT_KSM_V1_METRICS_ONLY
          value: "false"
        
        # Performance tuning
        - name: MAX_QUERY_CONCURRENCY
          value: "5"
        - name: GOGC
          value: "80"
        
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits:
            cpu: 500m
            memory: 1Gi
            
        livenessProbe:
          httpGet:
            path: /healthz
            port: 9003
          initialDelaySeconds: 30
          periodSeconds: 10
          
        readinessProbe:
          httpGet:
            path: /healthz
            port: 9003
          initialDelaySeconds: 10
          periodSeconds: 5
          
        volumeMounts:
        - name: carbon-config
          mountPath: /etc/carbon-config
          readOnly: true
        - name: opencost-data
          mountPath: /var/configs
          
      volumes:
      - name: carbon-config
        configMap:
          name: opencost-carbon-config
      - name: opencost-data
        emptyDir: {}

---
# Service for OpenCost with carbon metrics
apiVersion: v1
kind: Service
metadata:
  name: opencost
  namespace: opencost
  labels:
    app: opencost
    component: cost-analyzer
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port: '9003'
    prometheus.io/path: '/metrics'
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 9003
    targetPort: 9003
    protocol: TCP
  - name: ui
    port: 9090
    targetPort: 9090
    protocol: TCP
  selector:
    app: opencost

---
# ServiceAccount for OpenCost
apiVersion: v1
kind: ServiceAccount
metadata:
  name: opencost
  namespace: opencost
  labels:
    app: opencost

---
# ClusterRole for OpenCost carbon tracking
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: opencost
  labels:
    app: opencost
rules:
# Core cost metrics
- apiGroups: [""]
  resources: ["nodes", "pods", "services", "resourcequotas", "replicationcontrollers", "limitranges", "persistentvolumeclaims", "persistentvolumes", "namespaces", "endpoints"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["extensions"]
  resources: ["daemonsets", "deployments", "replicasets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["statefulsets", "deployments", "daemonsets", "replicasets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["batch"]
  resources: ["cronjobs", "jobs"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["autoscaling"]
  resources: ["horizontalpodautoscalers"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["policy"]
  resources: ["poddisruptionbudgets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["storage.k8s.io"]
  resources: ["storageclasses"]
  verbs: ["get", "list", "watch"]
# Carbon tracking specific
- apiGroups: ["metrics.k8s.io"]
  resources: ["nodes", "pods"]
  verbs: ["get", "list"]
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch"]
  resourceNames: ["opencost-carbon-config"]

---
# ClusterRoleBinding for OpenCost
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: opencost
  labels:
    app: opencost
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: opencost
subjects:
- kind: ServiceAccount
  name: opencost
  namespace: opencost

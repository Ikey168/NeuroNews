apiVersion: apps/v1
kind: Deployment
metadata:
  name: vpa-recommender
  namespace: vpa-system
  labels:
    app: vpa-recommender
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vpa-recommender
  template:
    metadata:
      labels:
        app: vpa-recommender
    spec:
      serviceAccountName: vpa-recommender
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534 # nobody
      containers:
      - name: recommender
        image: registry.k8s.io/autoscaling/vpa-recommender:1.0.0
        imagePullPolicy: Always
        resources:
          limits:
            cpu: 200m
            memory: 1000Mi
          requests:
            cpu: 50m
            memory: 500Mi
        ports:
        - name: prometheus
          containerPort: 8942
          protocol: TCP
        args:
        - --v=4
        - --stderrthreshold=info
        - --pod-recommendation-min-cpu-millicores=25
        - --pod-recommendation-min-memory-mb=250
        - --storage=prometheus
        - --prometheus-address=http://prometheus-server.monitoring.svc.cluster.local:80
        - --metric-for-pod-labels=kube_pod_labels
        - --history-length=8d
        - --memory-aggregation-interval=1h
        - --cpu-aggregation-interval=1h
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        livenessProbe:
          failureThreshold: 6
          httpGet:
            path: /health-check
            port: prometheus
            scheme: HTTP
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        readinessProbe:
          failureThreshold: 120
          httpGet:
            path: /health-check
            port: prometheus
            scheme: HTTP
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vpa-updater
  namespace: vpa-system
  labels:
    app: vpa-updater
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vpa-updater
  template:
    metadata:
      labels:
        app: vpa-updater
    spec:
      serviceAccountName: vpa-updater
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534 # nobody
      containers:
      - name: updater
        image: registry.k8s.io/autoscaling/vpa-updater:1.0.0
        imagePullPolicy: Always
        resources:
          limits:
            cpu: 200m
            memory: 1000Mi
          requests:
            cpu: 50m
            memory: 500Mi
        ports:
        - name: prometheus
          containerPort: 8943
          protocol: TCP
        args:
        - --v=4
        - --stderrthreshold=info
        - --min-replicas=1
        - --eviction-rate-limit=2
        - --eviction-rate-burst=1
        - --eviction-tolerance=0.5
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        livenessProbe:
          failureThreshold: 6
          httpGet:
            path: /health-check
            port: prometheus
            scheme: HTTP
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        readinessProbe:
          failureThreshold: 120
          httpGet:
            path: /health-check
            port: prometheus
            scheme: HTTP
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vpa-admission-controller
  namespace: vpa-system
  labels:
    app: vpa-admission-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vpa-admission-controller
  template:
    metadata:
      labels:
        app: vpa-admission-controller
    spec:
      serviceAccountName: vpa-admission-controller
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534 # nobody
      containers:
      - name: admission-controller
        image: registry.k8s.io/autoscaling/vpa-admission-controller:1.0.0
        imagePullPolicy: Always
        resources:
          limits:
            cpu: 200m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 200Mi
        ports:
        - name: https
          containerPort: 8000
          protocol: TCP
        - name: prometheus
          containerPort: 8944
          protocol: TCP
        args:
        - --v=4
        - --stderrthreshold=info
        - --client-ca-file=/etc/tls-certs/caCert.pem
        - --tls-cert-file=/etc/tls-certs/serverCert.pem
        - --tls-private-key=/etc/tls-certs/serverKey.pem
        - --webhook-timeout-seconds=30
        - --webhook-port=8000
        - --register-webhook=true
        - --register-by-url=false
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        volumeMounts:
        - name: tls-certs
          mountPath: /etc/tls-certs
          readOnly: true
        livenessProbe:
          failureThreshold: 6
          httpGet:
            path: /health-check
            port: prometheus
            scheme: HTTP
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        readinessProbe:
          failureThreshold: 120
          httpGet:
            path: /health-check
            port: prometheus
            scheme: HTTP
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
      volumes:
      - name: tls-certs
        secret:
          secretName: vpa-webhook-certs
---
apiVersion: v1
kind: Service
metadata:
  name: vpa-webhook
  namespace: vpa-system
spec:
  ports:
  - name: https
    port: 443
    targetPort: https
  selector:
    app: vpa-admission-controller

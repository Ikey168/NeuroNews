apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: dashboard-monitor
  namespace: neuronews
  labels:
    app: neuronews-dashboard
    component: monitoring
  annotations:
    description: "ServiceMonitor for NeuroNews Dashboard metrics"
spec:
  selector:
    matchLabels:
      app: neuronews-dashboard
  endpoints:
  - port: metrics
    interval: 30s
    path: /metrics
    scrapeTimeout: 10s
    honorLabels: true
    relabelings:
    - sourceLabels: [__meta_kubernetes_pod_name]
      targetLabel: pod
    - sourceLabels: [__meta_kubernetes_pod_ip]
      targetLabel: pod_ip
    - sourceLabels: [__meta_kubernetes_namespace]
      targetLabel: namespace
    metricRelabelings:
    - sourceLabels: [__name__]
      regex: 'dashboard_.*'
      action: keep

---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: dashboard-alerts
  namespace: neuronews
  labels:
    app: neuronews-dashboard
    component: monitoring
  annotations:
    description: "Alerting rules for NeuroNews Dashboard"
spec:
  groups:
  - name: dashboard.rules
    interval: 30s
    rules:
    
    # Dashboard availability alerts
    - alert: DashboardDown
      expr: up{job="dashboard-monitor"} == 0
      for: 1m
      labels:
        severity: critical
        component: dashboard
      annotations:
        summary: "NeuroNews Dashboard is down"
        description: "Dashboard instance {{ $labels.instance }} has been down for more than 1 minute"
        runbook_url: "https://docs.neuronews.com/runbooks/dashboard-down"
    
    - alert: DashboardHighErrorRate
      expr: rate(dashboard_errors_total[5m]) > 0.1
      for: 2m
      labels:
        severity: warning
        component: dashboard
      annotations:
        summary: "High error rate in NeuroNews Dashboard"
        description: "Dashboard error rate is {{ $value | humanizePercentage }} for the last 5 minutes"
        runbook_url: "https://docs.neuronews.com/runbooks/dashboard-high-error-rate"
    
    # Performance alerts
    - alert: DashboardHighResponseTime
      expr: histogram_quantile(0.95, rate(dashboard_request_duration_seconds_bucket[5m])) > 5
      for: 3m
      labels:
        severity: warning
        component: dashboard
      annotations:
        summary: "High response time in NeuroNews Dashboard"
        description: "Dashboard 95th percentile response time is {{ $value }}s for the last 5 minutes"
        runbook_url: "https://docs.neuronews.com/runbooks/dashboard-high-response-time"
    
    - alert: DashboardHighCPUUsage
      expr: rate(container_cpu_usage_seconds_total{pod=~"neuronews-dashboard-.*"}[5m]) > 0.8
      for: 5m
      labels:
        severity: warning
        component: dashboard
      annotations:
        summary: "High CPU usage in NeuroNews Dashboard"
        description: "Dashboard CPU usage is {{ $value | humanizePercentage }} for pod {{ $labels.pod }}"
        runbook_url: "https://docs.neuronews.com/runbooks/dashboard-high-cpu"
    
    - alert: DashboardHighMemoryUsage
      expr: container_memory_working_set_bytes{pod=~"neuronews-dashboard-.*"} / container_spec_memory_limit_bytes{pod=~"neuronews-dashboard-.*"} > 0.9
      for: 5m
      labels:
        severity: warning
        component: dashboard
      annotations:
        summary: "High memory usage in NeuroNews Dashboard"
        description: "Dashboard memory usage is {{ $value | humanizePercentage }} for pod {{ $labels.pod }}"
        runbook_url: "https://docs.neuronews.com/runbooks/dashboard-high-memory"
    
    # User experience alerts
    - alert: DashboardHighConcurrentUsers
      expr: dashboard_concurrent_users > 500
      for: 2m
      labels:
        severity: info
        component: dashboard
      annotations:
        summary: "High number of concurrent users on NeuroNews Dashboard"
        description: "Dashboard has {{ $value }} concurrent users"
        runbook_url: "https://docs.neuronews.com/runbooks/dashboard-high-users"
    
    - alert: DashboardLowAvailability
      expr: (1 - (sum(rate(dashboard_errors_total[5m])) / sum(rate(dashboard_requests_total[5m])))) < 0.99
      for: 5m
      labels:
        severity: critical
        component: dashboard
      annotations:
        summary: "Low availability for NeuroNews Dashboard"
        description: "Dashboard availability is {{ $value | humanizePercentage }} for the last 5 minutes"
        runbook_url: "https://docs.neuronews.com/runbooks/dashboard-low-availability"
    
    # Dependency alerts
    - alert: DashboardAPIUnreachable
      expr: dashboard_api_up{api="fastapi"} == 0
      for: 1m
      labels:
        severity: critical
        component: dashboard
      annotations:
        summary: "Dashboard cannot reach FastAPI service"
        description: "Dashboard has been unable to reach FastAPI for more than 1 minute"
        runbook_url: "https://docs.neuronews.com/runbooks/dashboard-api-unreachable"
    
    - alert: DashboardDatabaseUnreachable
      expr: dashboard_db_up == 0
      for: 1m
      labels:
        severity: critical
        component: dashboard
      annotations:
        summary: "Dashboard cannot reach database"
        description: "Dashboard has been unable to reach database for more than 1 minute"
        runbook_url: "https://docs.neuronews.com/runbooks/dashboard-db-unreachable"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: dashboard-grafana-dashboard
  namespace: neuronews
  labels:
    app: neuronews-dashboard
    component: monitoring
    grafana_dashboard: "1"
  annotations:
    description: "Grafana dashboard for NeuroNews Dashboard monitoring"
data:
  dashboard.json: |
    {
      "dashboard": {
        "id": null,
        "title": "NeuroNews Dashboard Monitoring",
        "tags": ["neuronews", "dashboard", "streamlit"],
        "style": "dark",
        "timezone": "browser",
        "panels": [
          {
            "id": 1,
            "title": "Dashboard Availability",
            "type": "stat",
            "targets": [
              {
                "expr": "up{job=\"dashboard-monitor\"}",
                "refId": "A"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "color": {
                  "mode": "thresholds"
                },
                "thresholds": {
                  "steps": [
                    {"color": "red", "value": 0},
                    {"color": "green", "value": 1}
                  ]
                }
              }
            },
            "gridPos": {"h": 8, "w": 6, "x": 0, "y": 0}
          },
          {
            "id": 2,
            "title": "Response Time",
            "type": "graph",
            "targets": [
              {
                "expr": "histogram_quantile(0.95, rate(dashboard_request_duration_seconds_bucket[5m]))",
                "refId": "A",
                "legendFormat": "95th percentile"
              },
              {
                "expr": "histogram_quantile(0.50, rate(dashboard_request_duration_seconds_bucket[5m]))",
                "refId": "B",
                "legendFormat": "50th percentile"
              }
            ],
            "yAxes": [
              {
                "label": "Time (seconds)",
                "min": 0
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 6, "y": 0}
          },
          {
            "id": 3,
            "title": "Request Rate",
            "type": "graph",
            "targets": [
              {
                "expr": "rate(dashboard_requests_total[5m])",
                "refId": "A",
                "legendFormat": "Requests/sec"
              }
            ],
            "yAxes": [
              {
                "label": "Requests per second",
                "min": 0
              }
            ],
            "gridPos": {"h": 8, "w": 6, "x": 18, "y": 0}
          },
          {
            "id": 4,
            "title": "Error Rate",
            "type": "graph",
            "targets": [
              {
                "expr": "rate(dashboard_errors_total[5m])",
                "refId": "A",
                "legendFormat": "Errors/sec"
              }
            ],
            "yAxes": [
              {
                "label": "Errors per second",
                "min": 0
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 0, "y": 8}
          },
          {
            "id": 5,
            "title": "Concurrent Users",
            "type": "graph",
            "targets": [
              {
                "expr": "dashboard_concurrent_users",
                "refId": "A",
                "legendFormat": "Users"
              }
            ],
            "yAxes": [
              {
                "label": "Users",
                "min": 0
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 12, "y": 8}
          },
          {
            "id": 6,
            "title": "Resource Usage",
            "type": "graph",
            "targets": [
              {
                "expr": "rate(container_cpu_usage_seconds_total{pod=~\"neuronews-dashboard-.*\"}[5m])",
                "refId": "A",
                "legendFormat": "CPU Usage"
              },
              {
                "expr": "container_memory_working_set_bytes{pod=~\"neuronews-dashboard-.*\"} / 1024 / 1024 / 1024",
                "refId": "B",
                "legendFormat": "Memory Usage (GB)"
              }
            ],
            "yAxes": [
              {
                "label": "Usage",
                "min": 0
              }
            ],
            "gridPos": {"h": 8, "w": 24, "x": 0, "y": 16}
          }
        ],
        "time": {
          "from": "now-1h",
          "to": "now"
        },
        "refresh": "30s"
      }
    }

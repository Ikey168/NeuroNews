all:
  children:
    kubernetes:
      children:
        masters:
          hosts:
            k8s-master-1:
              ansible_host: 10.0.1.10
              ansible_user: ubuntu
              node_role: master
            k8s-master-2:
              ansible_host: 10.0.1.11
              ansible_user: ubuntu
              node_role: master
            k8s-master-3:
              ansible_host: 10.0.1.12
              ansible_user: ubuntu
              node_role: master
        workers:
          hosts:
            k8s-worker-1:
              ansible_host: 10.0.1.20
              ansible_user: ubuntu
              node_role: worker
            k8s-worker-2:
              ansible_host: 10.0.1.21
              ansible_user: ubuntu
              node_role: worker
            k8s-worker-3:
              ansible_host: 10.0.1.22
              ansible_user: ubuntu
              node_role: worker
      vars:
        kubernetes_version: "1.28.0"
        kubernetes_cluster_name: "neuronews-cluster"
        kubernetes_api_server_port: 6443
        kubernetes_pod_network_cidr: "10.244.0.0/16"
        kubernetes_service_cidr: "10.96.0.0/12"
    
    docker_registry:
      hosts:
        registry-1:
          ansible_host: registry.neuronews.local
          ansible_user: ubuntu
          registry_port: 5000
      vars:
        docker_registry_url: "registry.neuronews.local:5000"
        docker_registry_insecure: true
    
    monitoring:
      hosts:
        monitoring-1:
          ansible_host: monitoring.neuronews.local
          ansible_user: ubuntu
      vars:
        prometheus_port: 9090
        grafana_port: 3000
    
    # Local deployment for development/testing
    local:
      hosts:
        localhost:
          ansible_connection: local
          ansible_python_interpreter: "{{ ansible_playbook_python }}"
      vars:
        deployment_env: "local"
        use_minikube: true
        minikube_driver: "docker"

  vars:
    # Common variables for all hosts
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
    ansible_become: true
    
    # Application Configuration
    app_name: "neuronews"
    app_version: "latest"
    app_namespace: "neuronews"
    
    # Docker Configuration
    docker_version: "24.0"
    docker_compose_version: "2.20.0"
    
    # Python Configuration
    python_version: "3.11"
    pip_version: "23.0"
    
    # Security Configuration
    enable_rbac: true
    enable_network_policies: true
    enable_pod_security_policies: true
